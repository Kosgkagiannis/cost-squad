{"version":3,"file":"static/js/278.bbbc698d.chunk.js","mappings":"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","sources":["components/GroupComponents/GroupExpenseForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport GroupExpenseFormProps from \"../../types/GroupTypes/GroupExpenseFormProps\"\nimport WarningIcon from \"../../images/error-animation.gif\"\nimport ExpensesHistory from \"../../images/expenses-history.gif\"\nimport AddExpenseAnimation from \"../../images/add-expense-animation.gif\"\n\nconst GroupExpenseForm: React.FC<GroupExpenseFormProps> = ({\n  description,\n  amount,\n  selectedMemberId,\n  groupId,\n  groupMembers,\n  groupExpenses,\n  imageFileName,\n  handleDescriptionChange,\n  handleAmountChange,\n  handleSelectedMemberChange,\n  handleAddExpense,\n  handleImageChange,\n}) => {\n  const itemsPerPage = 4\n  const [currentPage, setCurrentPage] = useState(1)\n  const [currency, setCurrency] = useState<string>(\"\")\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const hash = window.location.hash\n    const currencyParamIndex = hash.indexOf(\"currency=\")\n\n    if (currencyParamIndex !== -1) {\n      const currencyParam = hash.slice(currencyParamIndex + \"currency=\".length)\n      setCurrency(decodeURIComponent(currencyParam))\n    }\n  }, [])\n\n  const handleNextPage = () => {\n    setCurrentPage(currentPage + 1)\n  }\n\n  const handlePreviousPage = () => {\n    setCurrentPage(currentPage - 1)\n  }\n\n  // Calculate which expenses to display based on the current page\n  const startIndex = (currentPage - 1) * itemsPerPage\n  const endIndex = startIndex + itemsPerPage\n\n  const expensesToDisplay = groupExpenses\n    .slice()\n    .sort((a, b) => b.timestamp - a.timestamp)\n    .slice(startIndex, endIndex)\n\n  const handleCustomUploadClick = () => {\n    document.getElementById(\"fileInput\")?.click()\n  }\n  const formatImageFileName = (fileName: string) => {\n    if (fileName && fileName.length > 14) {\n      const firstPart = fileName.slice(0, 10)\n      const lastPart = fileName.slice(-4)\n      return `${firstPart}...${lastPart}`\n    }\n    return fileName\n  }\n\n  return (\n    <>\n      {groupMembers.length > 1 ? (\n        <div>\n          <div className=\"divider\" />\n          <div className=\"title-and-animation\">\n            <h2 className=\"pulse\">Add expense</h2>\n            <img\n              src={AddExpenseAnimation}\n              alt=\"Add expense animation\"\n              width={50}\n              height={50}\n            />\n          </div>\n          <input\n            type=\"text\"\n            id=\"description-group\"\n            placeholder=\"Description\"\n            value={description}\n            onChange={handleDescriptionChange}\n            maxLength={50}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Amount\"\n            value={amount}\n            onChange={handleAmountChange}\n          />\n          <div style={{ margin: \"1rem\" }}>\n            <label style={{ margin: \"10px\" }}>Paid By: </label>\n            <select\n              className=\"currency\"\n              value={selectedMemberId}\n              onChange={handleSelectedMemberChange}\n              data-testid=\"selected-member\"\n            >\n              <option value=\"\">Select member</option>\n              {groupMembers\n                .filter((member) => member.name && member.name.trim() !== \"\")\n                .map((member) => (\n                  <option key={member.id} value={member.id}>\n                    {member.name}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div\n            className=\"custom-upload-button\"\n            onClick={handleCustomUploadClick}\n          >\n            <span>Upload Receipt</span>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              id=\"fileInput\"\n              style={{ display: \"none\" }}\n              onChange={handleImageChange}\n            />\n          </div>\n          {imageFileName && (\n            <p>\n              Selected Image:{\" \"}\n              {formatImageFileName(imageFileName) || \"No image selected\"}\n            </p>\n          )}\n          <button\n            disabled={\n              description.trim() === \"\" ||\n              amount.trim() === \"\" ||\n              selectedMemberId === \"\"\n            }\n            onClick={handleAddExpense}\n          >\n            Add Expense\n          </button>\n          <div>\n            {expensesToDisplay.length > 0 && (\n              <>\n                <div className=\"divider\" />\n                <div className=\"title-and-animation\">\n                  <h2 className=\"pulse\">Expenses History</h2>\n                  <img\n                    src={ExpensesHistory}\n                    alt=\"Expenses History\"\n                    width={50}\n                    height={50}\n                  />\n                </div>\n              </>\n            )}\n            <ul className=\"expense-list\">\n              {expensesToDisplay.map((expense) => (\n                <li key={expense.id} className=\"expense-item\">\n                  <p>Description: {expense.description}</p>\n                  <p>\n                    Amount:{\" \"}\n                    {new Intl.NumberFormat(undefined, {\n                      minimumFractionDigits: 0,\n                      maximumFractionDigits: 3,\n                    }).format(expense.amount)}{\" \"}\n                    {currency}\n                  </p>\n                  <p>Paid By: {expense.payerName}</p>\n                  <button\n                    onClick={() =>\n                      navigate(\n                        `/expense-details/${groupId}/${expense.id}?currency=${currency}`\n                      )\n                    }\n                  >\n                    Details\n                  </button>\n                </li>\n              ))}\n            </ul>\n            {groupExpenses.length > itemsPerPage && (\n              <div className=\"pagination\">\n                <button\n                  onClick={handlePreviousPage}\n                  disabled={currentPage === 1}\n                >\n                  {\"<\"}\n                </button>\n                <span>Page {currentPage}</span>\n                <button\n                  onClick={handleNextPage}\n                  disabled={endIndex >= groupExpenses.length}\n                >\n                  {\">\"}\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            gap: \"0.5rem\",\n          }}\n        >\n          <p style={{ color: \"#ff0000bd\" }}>\n            You need atleast 2 members to add an expense.\n          </p>\n          <img src={WarningIcon} alt=\"Loading\" width={25} height={25} />\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default GroupExpenseForm\n"],"names":["_ref","description","amount","selectedMemberId","groupId","groupMembers","groupExpenses","imageFileName","handleDescriptionChange","handleAmountChange","handleSelectedMemberChange","handleAddExpense","handleImageChange","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","currency","setCurrency","navigate","useNavigate","useEffect","hash","window","location","currencyParamIndex","indexOf","currencyParam","slice","decodeURIComponent","startIndex","endIndex","expensesToDisplay","sort","a","b","timestamp","_jsx","_Fragment","children","length","_jsxs","className","src","AddExpenseAnimation","alt","width","height","type","id","placeholder","value","onChange","maxLength","style","margin","filter","member","name","trim","map","onClick","_document$getElementB","document","getElementById","click","accept","display","fileName","firstPart","lastPart","concat","formatImageFileName","disabled","ExpensesHistory","expense","Intl","NumberFormat","undefined","minimumFractionDigits","maximumFractionDigits","format","payerName","flexDirection","alignItems","justifyContent","gap","color","WarningIcon"],"sourceRoot":""}