{"version":3,"file":"static/js/488.1baa9a66.chunk.js","mappings":"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","sources":["components/GroupComponents/GroupHeader.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { query, where, collection, getDocs } from \"firebase/firestore\"\nimport { db } from \"../../config/firebase\"\n\nimport SettingsIcon from \"../../images/settings.png\"\n\ninterface GroupHeaderProps {\n  groupTitle: string | null\n  originalGroupName?: string\n  newGroupName: string\n  groupId: string\n  onGroupNameChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleUpdateGroupName: () => void\n  onDeleteGroup: () => void\n}\n\nconst GroupHeader: React.FC<GroupHeaderProps> = ({\n  groupTitle,\n  originalGroupName,\n  newGroupName,\n  groupId,\n  onGroupNameChange,\n  handleUpdateGroupName,\n  onDeleteGroup,\n}) => {\n  const [isEditingGroupName, setIsEditingGroupName] = useState(false)\n  const [showMenu, setShowMenu] = useState(false)\n  const [activityLogs, setActivityLogs] = useState<any[]>([])\n  const [showActivityLogs, setShowActivityLogs] = useState(false)\n  const [currency, setCurrency] = useState<string>(\"\")\n\n  useEffect(() => {\n    const hash = window.location.hash\n    const currencyParamIndex = hash.indexOf(\"currency=\")\n\n    if (currencyParamIndex !== -1) {\n      const currencyParam = hash.slice(currencyParamIndex + \"currency=\".length)\n      setCurrency(decodeURIComponent(currencyParam))\n    }\n  }, [])\n\n  const fetchActivityLogs = async () => {\n    try {\n      if (!groupId) {\n        console.error(\"groupId is undefined\")\n        return\n      }\n\n      const activityLogsCollectionRef = collection(db, \"activityLogs\")\n      const logsQuery = query(\n        activityLogsCollectionRef,\n        where(\"groupId\", \"==\", groupId)\n      )\n      const querySnapshot = await getDocs(logsQuery)\n      const logsData = querySnapshot.docs.map((doc) => doc.data())\n      logsData.sort((a, b) => b.timestamp.seconds - a.timestamp.seconds)\n      setActivityLogs(logsData)\n    } catch (error) {\n      console.error(\"Error fetching activity logs:\", error)\n    }\n  }\n\n  const toggleActivityLogs = async () => {\n    if (!showActivityLogs) {\n      document.body.classList.add(\"no-scroll\")\n      await fetchActivityLogs()\n    } else {\n      document.body.classList.remove(\"no-scroll\")\n    }\n    setShowActivityLogs(!showActivityLogs)\n    setShowMenu(false)\n  }\n\n  const toggleMenu = () => {\n    setShowMenu(!showMenu)\n  }\n\n  const cancelEdit = () => {\n    setIsEditingGroupName(false)\n  }\n\n  const stopPropagation = (e: React.MouseEvent) => {\n    e.stopPropagation()\n  }\n\n  const renderLogMessage = (log) => {\n    const convertTimestampToDateTime = (timestamp) => {\n      const date = new Date(\n        timestamp.seconds * 1000 + timestamp.nanoseconds / 1000000\n      )\n      return date.toLocaleString()\n    }\n    const dateTimeAdded = convertTimestampToDateTime(log.timestamp)\n\n    switch (log.action) {\n      case \"MemberAdded\":\n        return `The user with email \"${log.addedBy}\" added a member called \"${log.memberName}\" at ${dateTimeAdded}.`\n      case \"MemberDeleted\":\n        return `The user with email \"${log.deletedBy}\" deleted a member called \"${log.memberName}\" at ${dateTimeAdded}.`\n\n      case \"ExpenseAdded\":\n        return `The user with email \"${log.addedBy}\" added an expense of ${log.amount} ${currency} at ${dateTimeAdded}.`\n\n      case \"ExpenseDeleted\":\n        return `The user with email \"${log.deletedBy}\" deleted an expense of ${log.amount} ${currency} at ${dateTimeAdded}.`\n      default:\n        return \"Unknown log action\"\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"top-delete-button\">\n        <h1 data-testid=\"group-name-title\" className=\"group-title\">\n          {groupTitle || \"Group Name\"}\n        </h1>\n\n        {showActivityLogs && (\n          <div className=\"modal-activity-log\">\n            <div className=\"modal-activity-log-main\">\n              <button\n                style={{ position: \"absolute\", right: \"5px\", top: \"-10px\" }}\n                onClick={toggleActivityLogs}\n              >\n                X\n              </button>\n\n              {activityLogs.length > 0 ? (\n                <h3>Activity Logs for {groupTitle}</h3>\n              ) : (\n                <h3>No activity recorded yet.</h3>\n              )}\n              <ul>\n                {activityLogs.map((log, index) => (\n                  <div key={index}>\n                    <li>{renderLogMessage(log)}</li>\n                    <br />\n                  </div>\n                ))}\n              </ul>\n            </div>\n          </div>\n        )}\n        <div className=\"menu-icon\" onClick={toggleMenu}>\n          <img\n            width={30}\n            height={30}\n            src={SettingsIcon}\n            alt=\"Settings Icon\"\n            style={{\n              cursor: \"pointer\",\n              transition: \"transform 0.3s ease-in-out\",\n              transform: showMenu ? \"rotate(90deg)\" : \"rotate(0deg)\",\n            }}\n          />\n          {showMenu && (\n            <div className=\"menu-dropdown\" onClick={stopPropagation}>\n              <p>Squad ID: {groupId}</p>\n              <button onClick={toggleActivityLogs}>Show Activity Logs</button>\n\n              {isEditingGroupName ? (\n                <>\n                  <h2 style={{ marginInline: \"0.2rem\" }}>Edit Squad Name</h2>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter New Squad Name\"\n                    data-testid=\"group-name-input\"\n                    value={\n                      isEditingGroupName ? newGroupName : originalGroupName\n                    }\n                    onChange={onGroupNameChange}\n                    maxLength={20}\n                    style={{ width: \"unset\", marginInline: \"0.3rem\" }}\n                  />\n                  <button\n                    onClick={() => {\n                      handleUpdateGroupName()\n                      setShowMenu(false)\n                      setIsEditingGroupName(false)\n                    }}\n                    disabled={newGroupName.trim() === \"\"}\n                  >\n                    Update Squad Name\n                  </button>\n                  <button onClick={cancelEdit}>Cancel</button>\n                </>\n              ) : (\n                <button onClick={() => setIsEditingGroupName(true)}>\n                  Edit Squad Name\n                </button>\n              )}\n              <button\n                onClick={onDeleteGroup}\n                style={{ backgroundColor: \"#ff0000bd\", color: \"#ffffffed\" }}\n              >\n                Delete Squad\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default GroupHeader\n"],"names":["_ref","groupTitle","originalGroupName","newGroupName","groupId","onGroupNameChange","handleUpdateGroupName","onDeleteGroup","_useState","useState","_useState2","_slicedToArray","isEditingGroupName","setIsEditingGroupName","_useState3","_useState4","showMenu","setShowMenu","_useState5","_useState6","activityLogs","setActivityLogs","_useState7","_useState8","showActivityLogs","setShowActivityLogs","_useState9","_useState10","currency","setCurrency","useEffect","hash","window","location","currencyParamIndex","indexOf","currencyParam","slice","decodeURIComponent","fetchActivityLogs","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","activityLogsCollectionRef","logsQuery","querySnapshot","logsData","wrap","_context","prev","next","console","error","abrupt","collection","db","query","where","getDocs","sent","docs","map","doc","data","sort","a","b","timestamp","seconds","t0","stop","apply","arguments","toggleActivityLogs","_ref3","_callee2","_context2","document","body","classList","add","remove","renderLogMessage","log","dateTimeAdded","Date","nanoseconds","toLocaleString","action","concat","addedBy","memberName","deletedBy","amount","_jsx","children","_jsxs","className","style","position","right","top","onClick","length","index","width","height","src","SettingsIcon","alt","cursor","transition","transform","e","stopPropagation","_Fragment","marginInline","type","placeholder","value","onChange","maxLength","disabled","trim","backgroundColor","color"],"sourceRoot":""}