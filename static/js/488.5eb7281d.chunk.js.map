{"version":3,"file":"static/js/488.5eb7281d.chunk.js","mappings":"kPAoGA,EAxFgD,SAAHA,GAOtC,IANLC,EAAUD,EAAVC,WACAC,EAAiBF,EAAjBE,kBACAC,EAAYH,EAAZG,aACAC,EAAiBJ,EAAjBI,kBACAC,EAAqBL,EAArBK,sBACAC,EAAaN,EAAbM,cAEAC,GAAoDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5DI,EAAkBF,EAAA,GAAEG,EAAqBH,EAAA,GAChDI,GAAgCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAc5B,OACEG,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBF,SAAA,EAChCD,EAAAA,EAAAA,KAAA,MAAI,cAAY,mBAAmBG,UAAU,cAAaF,SACvDjB,GAAc,gBAEjBkB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAYC,QAlBd,WACjBL,GAAaD,EACf,EAgBqDG,SAAA,EAC7CD,EAAAA,EAAAA,KAAA,OACEK,MAAO,GACPC,OAAQ,GACRC,IAAKC,EACLC,IAAI,gBACJC,MAAO,CACLC,OAAQ,UACRC,WAAY,6BACZC,UAAWf,EAAW,gBAAkB,kBAG3CA,IACCI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAgBC,QAvBjB,SAACU,GACvBA,EAAEC,iBACJ,EAqBkEd,SAAA,EACtDD,EAAAA,EAAAA,KAAA,UACEI,QAASf,EACTqB,MAAO,CAAEM,gBAAiB,YAAaC,MAAO,aAAchB,SAC7D,iBAGAP,GACCQ,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAjB,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIU,MAAO,CAAES,aAAc,UAAWlB,SAAC,qBACvCD,EAAAA,EAAAA,KAAA,SACEoB,KAAK,OACLC,YAAY,uBACZ,cAAY,mBACZC,MACE5B,EAAqBR,EAAeD,EAEtCsC,SAAUpC,EACVqC,UAAW,GACXd,MAAO,CAAEL,MAAO,QAASc,aAAc,aAEzCnB,EAAAA,EAAAA,KAAA,UACEI,QAAS,WACPhB,IACAW,GAAY,GACZJ,GAAsB,EACxB,EACA8B,SAAkC,KAAxBvC,EAAawC,OAAczB,SACtC,uBAGDD,EAAAA,EAAAA,KAAA,UAAQI,QA1DL,WACjBT,GAAsB,EACxB,EAwD4CM,SAAC,eAG/BD,EAAAA,EAAAA,KAAA,UAAQI,QAAS,kBAAMT,GAAsB,EAAK,EAACM,SAAC,8BAUpE,C","sources":["components/GroupComponents/GroupHeader.tsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport SettingsIcon from \"../../images/settings.png\"\n\ninterface GroupHeaderProps {\n  groupTitle: string | null\n  originalGroupName?: string\n  newGroupName: string\n  onGroupNameChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleUpdateGroupName: () => void\n  onDeleteGroup: () => void\n}\n\nconst GroupHeader: React.FC<GroupHeaderProps> = ({\n  groupTitle,\n  originalGroupName,\n  newGroupName,\n  onGroupNameChange,\n  handleUpdateGroupName,\n  onDeleteGroup,\n}) => {\n  const [isEditingGroupName, setIsEditingGroupName] = useState(false)\n  const [showMenu, setShowMenu] = useState(false)\n\n  const toggleMenu = () => {\n    setShowMenu(!showMenu)\n  }\n\n  const cancelEdit = () => {\n    setIsEditingGroupName(false)\n  }\n\n  const stopPropagation = (e: React.MouseEvent) => {\n    e.stopPropagation()\n  }\n\n  return (\n    <div>\n      <div className=\"top-delete-button\">\n        <h1 data-testid=\"group-name-title\" className=\"group-title\">\n          {groupTitle || \"Group Name\"}\n        </h1>\n        <div className=\"menu-icon\" onClick={toggleMenu}>\n          <img\n            width={30}\n            height={30}\n            src={SettingsIcon}\n            alt=\"Settings Icon\"\n            style={{\n              cursor: \"pointer\",\n              transition: \"transform 0.3s ease-in-out\",\n              transform: showMenu ? \"rotate(90deg)\" : \"rotate(0deg)\",\n            }}\n          />\n          {showMenu && (\n            <div className=\"menu-dropdown\" onClick={stopPropagation}>\n              <button\n                onClick={onDeleteGroup}\n                style={{ backgroundColor: \"#ff0000bd\", color: \"#ffffffed\" }}\n              >\n                Delete Squad\n              </button>\n              {isEditingGroupName ? (\n                <>\n                  <h2 style={{ marginInline: \"0.2rem\" }}>Edit Squad Name</h2>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter New Group Name\"\n                    data-testid=\"group-name-input\"\n                    value={\n                      isEditingGroupName ? newGroupName : originalGroupName\n                    }\n                    onChange={onGroupNameChange}\n                    maxLength={20}\n                    style={{ width: \"unset\", marginInline: \"0.3rem\" }}\n                  />\n                  <button\n                    onClick={() => {\n                      handleUpdateGroupName()\n                      setShowMenu(false)\n                      setIsEditingGroupName(false)\n                    }}\n                    disabled={newGroupName.trim() === \"\"}\n                  >\n                    Update Squad Name\n                  </button>\n                  <button onClick={cancelEdit}>Cancel</button>\n                </>\n              ) : (\n                <button onClick={() => setIsEditingGroupName(true)}>\n                  Edit Squad Name\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default GroupHeader\n"],"names":["_ref","groupTitle","originalGroupName","newGroupName","onGroupNameChange","handleUpdateGroupName","onDeleteGroup","_useState","useState","_useState2","_slicedToArray","isEditingGroupName","setIsEditingGroupName","_useState3","_useState4","showMenu","setShowMenu","_jsx","children","_jsxs","className","onClick","width","height","src","SettingsIcon","alt","style","cursor","transition","transform","e","stopPropagation","backgroundColor","color","_Fragment","marginInline","type","placeholder","value","onChange","maxLength","disabled","trim"],"sourceRoot":""}